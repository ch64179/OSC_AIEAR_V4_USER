<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 명은 dao 와 일치하게 작성하면 됨 -->
<mapper namespace="com.aiear.dao.LoginDAO">

	<!-- 로그인 (ID 체크) -->
	<select id="normalLoginIdProcess" parameterType="userInfoVO" resultType="hmap">
		SELECT t1.user_id
			 , t1.user_nm
			 , t1.user_pwd
			 , t1.user_type
			 , t1.user_salt
			 , t1.user_birth
			 , t1.user_gender
			 , t1.refresh_token
		  FROM t_user_info  t1
		 WHERE 1=1
		   AND t1.use_yn = 'Y'
		   AND t1.user_id = #{user_id}
	</select>
	
	<!-- Social 로그인 (UUID 체크) -->
	<select id="socialLoginProcess" parameterType="userInfoVO" resultType="hmap">
		SELECT t1.user_id
			 , t1.user_nm
			 , t1.user_pwd
			 , t1.user_type
			 , t1.user_salt
			 , t1.user_birth
			 , t1.user_gender
			 , t1.refresh_token
		  FROM t_user_info  t1
		 WHERE 1=1
		   AND t1.use_yn = 'Y'
		   AND t1.uuid = #{uuid} 
	</select>
	
	<!-- 로그인 (PWD 체크) -->
	<select id="normalLoginPwdProcess" parameterType="userInfoVO" resultType="hmap">
		SELECT t1.user_id
			 , t1.user_code
			 , t1.user_nm
			 , t1.user_pwd
			 , t1.user_type
			 , t1.use_yn
			 , t2.cd_val AS use_yn_nm
			 , t1.user_birth
			 , t1.user_gender
			 , t3.cd_val AS user_gender_nm
			 , t1.icon_type
		  FROM t_user_info t1
	INNER JOIN t_cm_cd t2
			ON t1.use_yn = t2.cd
		   AND t2.cat_cd = 'USER_USE_YN'
	LEFT OUTER JOIN t_cm_cd t3
			ON t1.user_gender = t3.cd
		   AND t3.cat_cd = 'USER_GENDER'
		 WHERE 1=1
		   AND t1.use_yn = 'Y'
		   AND t1.user_id = #{user_id}
		   AND t1.user_pwd = #{user_pwd}
	</select>
	
	
	<!-- Social 로그인 (PWD 체크) -->
	<select id="socialLoginPwdProcess" parameterType="userInfoVO" resultType="hmap">
		SELECT t1.user_id
			 , t1.user_code
			 , t1.user_nm
			 , t1.user_pwd
			 , t1.user_type
			 , t1.use_yn
			 , t2.cd_val AS use_yn_nm
			 , t1.user_birth
			 , t1.user_gender
			 , t3.cd_val AS user_gender_nm
		  FROM t_user_info t1
	INNER JOIN t_cm_cd t2
			ON t1.use_yn = t2.cd
		   AND t2.cat_cd = 'USER_USE_YN'
	LEFT OUTER JOIN t_cm_cd t3
			ON t1.user_gender = t3.cd
		   AND t3.cat_cd = 'USER_GENDER'
		 WHERE 1=1
		   AND t1.use_yn = 'Y'
		   AND t1.uuid = #{uuid}
		   AND t1.user_pwd = #{user_pwd}
	</select>
		
	
	<!-- ID, PWD 찾기 -->	
	<select id="searchIdPwdInfo" parameterType="userInfoVO" resultType="hmap">		
		SELECT t1.user_id
			 , t1.user_nm
			 , t1.user_pwd
			 , t1.user_type
			 , t1.user_code
			 , t1.use_yn
			 , t2.cd_val AS use_yn_nm
			 , t1.user_birth
			 , t1.user_gender
			 , t3.cd_val AS user_gender_nm
			 , t1.mobile_tel_no
		  FROM t_user_info t1
	INNER JOIN t_cm_cd t2
			ON t1.use_yn = t2.cd
		   AND t2.cat_cd = 'USER_USE_YN'
	INNER JOIN t_cm_cd t3
			ON t1.user_gender = t3.cd
		   AND t3.cat_cd = 'USER_GENDER'
		 WHERE 1=1
		   AND t1.use_yn = 'Y'
		<if test='mobile_tel_no != null and !"".equals(mobile_tel_no)'>
		   AND t1.mobile_tel_no = #{mobile_tel_no}
		</if>
		   AND t1.user_id = #{user_id}
		 ORDER BY user_type
		 		, user_id
	</select>
		
		
	<update id="updateUserTempPwd" parameterType="userInfoVO">
		UPDATE t_user_info
		   SET user_pwd = #{temp_pwd}
		   	 , user_salt = #{user_salt}
		 WHERE user_id = #{user_id}
	</update>
	
	
	<update id="updateLoginInfo" parameterType="userInfoVO">
		UPDATE t_user_info
		   SET last_login = now()
		     , refresh_token = #{refresh_token}
		 WHERE user_id = #{user_id}
	</update>
	

</mapper>
